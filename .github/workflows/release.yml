name: goreleaser

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: juno-admin

on:
  push:
    tags:
      - "v**"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "yarn"
          cache-dependency-path: assets/package-lock.json
      - name: yarn build dist
        run: |
          cd assets
          yarn install
          yarn build
          git checkout -- ./assets/yarn.lock
      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Get dependencies
        run: |
          go env
          go get -v -t -d ./...
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: image_name
        run: echo ${{ env.IMAGE_NAME }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=file_name::$(ls dist/juno_*linux* |cut -c 6-)"
      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5.9
        with:
          registry: ${{ env.REGISTRY }}
          image: ${{ env.IMAGE_NAME }}
          buildArgs: "JUNO_TAR=${{ steps.vars.outputs.file_name }}"
          addLatest: true
          directory: dist
          dockerfile: ./cmd/juno-admin/Dockerfile
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}