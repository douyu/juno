// Code generated by protoc-gen-go.
// source: pb/notify.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	pb/notify.proto

It has these top-level messages:
	NotifyReq
	NotifyResp
*/
package pb

import (
	"fmt"
	"math"

	"github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 新增连接信息通知
type NotifyReq struct {
	MsgId uint32 `protobuf:"varint,1,opt,name=msgId" json:"msgId,omitempty"`
	Msg   []byte `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *NotifyReq) Reset()                    { *m = NotifyReq{} }
func (m *NotifyReq) String() string            { return proto.CompactTextString(m) }
func (*NotifyReq) ProtoMessage()               {}
func (*NotifyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NotifyReq) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *NotifyReq) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type NotifyResp struct {
	Code  uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	MsgId uint32 `protobuf:"varint,2,opt,name=msgId" json:"msgId,omitempty"`
	Msg   []byte `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *NotifyResp) Reset()                    { *m = NotifyResp{} }
func (m *NotifyResp) String() string            { return proto.CompactTextString(m) }
func (*NotifyResp) ProtoMessage()               {}
func (*NotifyResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NotifyResp) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *NotifyResp) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *NotifyResp) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterType((*NotifyReq)(nil), "pb.NotifyReq")
	proto.RegisterType((*NotifyResp)(nil), "pb.NotifyResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Proxy service

type ProxyClient interface {
	Notify(ctx context.Context, opts ...grpc.CallOption) (Proxy_NotifyClient, error)
}

type proxyClient struct {
	cc *grpc.ClientConn
}

func NewProxyClient(cc *grpc.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Notify(ctx context.Context, opts ...grpc.CallOption) (Proxy_NotifyClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Proxy_serviceDesc.Streams[0], c.cc, "/pb.Proxy/Notify", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyNotifyClient{stream}
	return x, nil
}

type Proxy_NotifyClient interface {
	Send(*NotifyReq) error
	Recv() (*NotifyResp, error)
	grpc.ClientStream
}

type proxyNotifyClient struct {
	grpc.ClientStream
}

func (x *proxyNotifyClient) Send(m *NotifyReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyNotifyClient) Recv() (*NotifyResp, error) {
	m := new(NotifyResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Proxy service

type ProxyServer interface {
	Notify(Proxy_NotifyServer) error
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Notify_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServer).Notify(&proxyNotifyServer{stream})
}

type Proxy_NotifyServer interface {
	Send(*NotifyResp) error
	Recv() (*NotifyReq, error)
	grpc.ServerStream
}

type proxyNotifyServer struct {
	grpc.ServerStream
}

func (x *proxyNotifyServer) Send(m *NotifyResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyNotifyServer) Recv() (*NotifyReq, error) {
	m := new(NotifyReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Notify",
			Handler:       _Proxy_Notify_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pb/notify.proto",
}

func init() { proto.RegisterFile("pb/notify.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x48, 0xd2, 0xcf,
	0xcb, 0x2f, 0xc9, 0x4c, 0xab, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52,
	0x32, 0xe6, 0xe2, 0xf4, 0x03, 0x8b, 0x05, 0xa5, 0x16, 0x0a, 0x89, 0x70, 0xb1, 0xe6, 0x16, 0xa7,
	0x7b, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x06, 0x41, 0x38, 0x42, 0x02, 0x5c, 0xcc, 0xb9,
	0xc5, 0xe9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x20, 0xa6, 0x92, 0x07, 0x17, 0x17, 0x4c,
	0x53, 0x71, 0x81, 0x90, 0x10, 0x17, 0x4b, 0x72, 0x7e, 0x4a, 0x2a, 0x54, 0x13, 0x98, 0x8d, 0x30,
	0x89, 0x09, 0x8b, 0x49, 0xcc, 0x70, 0x93, 0x8c, 0x4c, 0xb8, 0x58, 0x03, 0x8a, 0xf2, 0x2b, 0x2a,
	0x85, 0xb4, 0xb9, 0xd8, 0x20, 0x46, 0x0a, 0xf1, 0xea, 0x15, 0x24, 0xe9, 0xc1, 0xdd, 0x24, 0xc5,
	0x87, 0xcc, 0x2d, 0x2e, 0xd0, 0x60, 0x34, 0x60, 0x4c, 0x62, 0x03, 0xbb, 0xdf, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x0c, 0xf1, 0x2f, 0xd4, 0xd2, 0x00, 0x00, 0x00,
}
