[app]
secretKey = "ASDFASDFASDF" # hashStatecode
mode = "multiple" # single without proxy, multiple with proxy
productionEnvs = ["production"]

[configure]
dirs = ["/tmp/www/server", "/tmp/www/.config"]
prefixes = ["juno-agent", "jupiter-agent"]

[agent]
port = 50010
secret = "12341234123412341234123412341234"

[logger.system]
debug = false # 是否在命令行输出
level = "debug"
async = false
name = "system.json" # 日志名称
dir = "."

[logger.biz]
debug = false # 是否在命令行输出
level = "debug"
async = false
name = "biz.json" # 日志名称
dir = "."

[session]
maxAge = 172800
secret = "ldfgoqnf935nvav34"
type = ""

[register]
enable = true
connectTimeout = "1s"
endpoints = ["127.0.0.1:2379"]
secure = false

#################################### Server ##############################
[server.http]
# The ip address to bind to, empty will bind to all interfaces
host = "0.0.0.0"
# The http port to use
port = 50002
domain = "localhost"

#################################### Jupiter Config #########################
[jupiter]

[jupiter.cron]

[jupiter.cron.parse]
withSeconds = false
concurrentDelay = 10
immediatelyRun = false

[jupiter.server]

[jupiter.server.governor]
# The ip address to bind to, empty will bind to all interfaces
host = "0.0.0.0"
# The http port to use
port = 50004
enable = true

#################################### Database ##############################
[database]
enable = true
connMaxLifetime = "300s"
debug = true
dsn = "root:root@tcp(127.0.0.1:3306)/juno?charset=utf8&parseTime=True&loc=Local&readTimeout=1s&timeout=1s&writeTimeout=3s"
level = "panic"
maxIdleConns = 50
maxOpenConns = 100

[grafanaProxy]
enable = true
name = "grafana"

#################################### Proxy ##############################
[[clientProxy.multiProxy]]
env = "dev"
zoneCode = "guanggu"

[clientProxy.multiProxy.stream]
enable = true
proxyAddr = ["127.0.0.1:50001"]

[clientProxy.multiProxy.registerEtcd]
enable = true
endpoints = ["127.0.0.1:62379"]
timeout = "3s"

[clientProxy.multiProxy.defaultEtcd]
endpoints = ["127.0.0.1:52379"]
enable = true
timeout = "3s"

[clientProxy.multiProxy.http]
enable = true
listenAddr = "127.0.0.1:50000"
disableKeepAlives = true
maxIdelPerHost = 1
maxIdleConns = 10
timeout = 100
scheme = "http"

[pprof]
path = "."

[auth]
# Login cookie name
loginCookieName = "juno_session"
# The lifetime (days) an authenticated user can be inactive before being required to login at next visit. Default is 7 days.
# 接口授权用户
loginMaximumInactiveLifetimeDays = 7
# The maximum lifetime (days) an authenticated user can be logged in since login time before being required to login. Default is 30 days.
# 页面登录用户
loginMaximumLifetimeDays = 30
# How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
# 刷新时间
tokenRotationIntervalMinutes = 10
# Set to true to disable (hide) the login form, useful if you use OAuth
disableLoginForm = false
# Set to true to disable the signout link in the side menu. useful if you use auth.proxy
disableSignoutMenu = false
# URL to redirect the user to after sign out
signoutRedirectUrl = ""
# Set to true to attempt login with OAuth automatically, skipping the login screen.
# This setting is ignored if multiple OAuth providers are configured.
oauthAutoLogin = false
# OAuth state max age cookie duration. Defaults to 60 seconds.
oauthStateCookieMaxAge = 60
# limit of api_key seconds to live before expiration
apiKeyMaxSecondsToLive = -1

#################################### Github Auth #########################
[auth.github]
enable = true
allowSignUp = true
clientId = "a6633e5544e60bd2574e"
clientSecret = "7c6f51d97fc93d5d575ebd13115b20f397807549"
scopes = ["user:email", "read:org"]
authUrl = "https://github.com/login/oauth/authorize"
tokenUrl = "https://github.com/login/oauth/access_token"
apiUrl = "https://api.github.com/user"
allowedDomains = []
teamIds = []
allowedOrganizations = []

[casbin]
enable = false
debug = true
model = "./config/model.conf"
autoLoad = true
autoLoadInternal = 60
# 资源配置
resourceFile = './config/resource.yaml'

[assist]

[assist.action]
enable = false
url = "https://xxx.xxx.com/"

#################################### monitor module ##############################
[applog]
enable = true
mode = "default" # customize or aliyun

[applog.aliyun]
key = ""
secret = ""
roleArn = ""
roleSessionName = ""
regionId = ""
loginUrl = ""

[applog.default]
domain = ""
expire = ""
appKey = ""
secret = ""

[[applog.default.logstore]]
env = "dev"
mode = "biz"
project = "project-pool-log"
logStore = "golang-all-biz-log-test"

[grpcTest]
enable = false
# PB文件目录，该目录下的所有PB文件会被遍历
protoDir = '../proto'

#################################### Go Dep Auth #########################
[godep.gitlab]
host = "https://gitlab.com"
token = "RgZev8zy6dtP2y8EA4sB"
frameName = "gitlab.com/douyu/jupiter"

[codeplatform]
token = "token" # 代码仓库访问凭证

[testplatform]
enable = false # 是否启用测试平台

[testplatform.worker]
localQueueDir = "C:/tmp/localworkerqueue"
heartbeatTimeout = "6s"

#################################### notice #########################
[notice]

[notice.email]
serverHost = "smtp.163.com"
serverPort = 465
fromEmail = "xxx@163.com"
fromPasswd = "xxx"
toers = ["xxxxxxx@qq.com"]
cCers = ["xxx@qq.com"]

[notice.ding]
webHook = "http://XXX.com"
msgType = "text"

# 系统事件的 RocektMQ 配置
[junoevent.rocketmq]
enable = false # 开关.如果为false，则系统事件不写MQ.
addr = ["127.0.0.1:9876"] # mq地址
topic = "juno_test_job" # mq topic
group = "juno_devops_go" # mq producer group
retry = 3 # MQ写重试次数
dialTimeout = "3s" # MQ连接超时时间

[k8s]
enable = false
prefix = ""
[[k8s.HB-WHYL]]
zoneCode = ""
domain = ""
token = ""
