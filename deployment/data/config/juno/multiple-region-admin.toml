[app]
  secretKey = "ASDFASDFASDF" # hashStatecode
  mode = "multiple"          # single without proxy, multiple with proxy

[configure]
  dirs = ["/tmp/www/server", "/tmp/www/.config"]
  prefixes = ["juno-agent", "jupiter-agent"]

  [configure.agent]
    port = 50010


[logger.system]
  debug = false        # 是否在命令行输出
  level = "debug"
  async = false
  name = "system.json" # 日志名称
  dir = "."
[logger.biz]
  debug = false     # 是否在命令行输出
  level = "debug"
  async = false
  name = "biz.json" # 日志名称
  dir = "."

[session]
  maxAge = 172800
  secret = "ldfgoqnf935nvav34"
  type = ""

[register]
  enable = true
  connectTimeout = "1s"
  endpoints = ["etcd:2379"]
  secure = false


#################################### Server ##############################
[server.http]
  # The ip address to bind to, empty will bind to all interfaces
  host = "0.0.0.0"
  # The http port to use
  port = 50002
  domain = "localhost"
[server.govern]
  # The ip address to bind to, empty will bind to all interfaces
  host = "0.0.0.0"
  # The http port to use
  port = 50004
#################################### Database ##############################
[database]
  enable = true
  connMaxLifetime = "300s"
  debug = true
  dsn = "root:root@tcp(db:3306)/juno?charset=utf8&parseTime=True&loc=Local&readTimeout=1s&timeout=1s&writeTimeout=3s"
  level = "panic"
  maxIdleConns = 50
  maxOpenConns = 100

[grafanaProxy]
  enable = true
  name = "grafana"

#################################### Proxy ##############################
[[clientProxy.multiProxy]]
  env = "dev"
  zoneCode = "guanggu"

  [clientProxy.multiProxy.stream]
    enable = true
    proxyAddr = ["127.0.0.1:50001"]

  [clientProxy.multiProxy.etcd]
    enable = true
    endpoints = ["127.0.0.1:5239"]
    timeout = "3s"

  [clientProxy.multiProxy.http]
    enable = true
    listenAddr = "127.0.0.1:50000"
    disableKeepAlives = true
    maxIdelPerHost = 1
    maxIdleConns = 10
    timeout = 100
    scheme = "http"

[pprof]
  path = "."

[auth]
  # Login cookie name
  loginCookieName = "juno_session"
  # The lifetime (days) an authenticated user can be inactive before being required to login at next visit. Default is 7 days.
  # 接口授权用户
  loginMaximumInactiveLifetimeDays = 7
  # The maximum lifetime (days) an authenticated user can be logged in since login time before being required to login. Default is 30 days.
  # 页面登录用户
  loginMaximumLifetimeDays = 30
  # How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
  # 刷新时间
  tokenRotationIntervalMinutes = 10
  # Set to true to disable (hide) the login form, useful if you use OAuth
  disableLoginForm = false
  # Set to true to disable the signout link in the side menu. useful if you use auth.proxy
  disableSignoutMenu = false
  # URL to redirect the user to after sign out
  signoutRedirectUrl = ""
  # Set to true to attempt login with OAuth automatically, skipping the login screen.
  # This setting is ignored if multiple OAuth providers are configured.
  oauthAutoLogin = false
  # OAuth state max age cookie duration. Defaults to 60 seconds.
  oauthStateCookieMaxAge = 60
  # limit of api_key seconds to live before expiration
  apiKeyMaxSecondsToLive = -1

  #################################### Github Auth #########################
  [auth.github]
    enable = true
    allowSignUp = true
    clientId = "a6633e5544e60bd2574e"
    clientSecret = "7c6f51d97fc93d5d575ebd13115b20f397807549"
    scopes = ["user:email", "read:org"]
    authUrl = "https://github.com/login/oauth/authorize"
    tokenUrl = "https://github.com/login/oauth/access_token"
    apiUrl = "https://api.github.com/user"
    allowedDomains = []
    teamIds = []
    allowedOrganizations = []

[casbin]
  enable = false
  debug = true
  model = "./config/model.conf"
  autoLoad = true
  autoLoadInternal = 60
  # 资源配置
  resourceFile = './config/resource.yaml'
